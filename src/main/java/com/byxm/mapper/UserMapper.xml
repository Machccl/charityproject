<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.byxm.mapper.UserMapper">
  <resultMap id="BaseResultMap" type="com.byxm.model.User">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="realname" jdbcType="VARCHAR" property="realname" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="power" jdbcType="CHAR" property="power" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="amount" jdbcType="INTEGER" property="amount" />
    <result column="phonenumber" jdbcType="VARCHAR" property="phonenumber" />
    <result column="createtime" jdbcType="CHAR" property="createtime" />
    <result column="updatetime" jdbcType="CHAR" property="updatetime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, username, realname, password, power, address, email, amount, phonenumber, createtime, 
    updatetime
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.byxm.model.User">
    insert into user (id, username, realname, 
      password, power, address, 
      email, amount, phonenumber, 
      createtime, updatetime)
    values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{realname,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{power,jdbcType=CHAR}, #{address,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{amount,jdbcType=INTEGER}, #{phonenumber,jdbcType=VARCHAR}, 
      #{createtime,jdbcType=CHAR}, #{updatetime,jdbcType=CHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.byxm.model.User">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="realname != null">
        realname,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="power != null">
        power,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="phonenumber != null">
        phonenumber,
      </if>
      <if test="createtime != null">
        createtime,
      </if>
      <if test="updatetime != null">
        updatetime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="realname != null">
        #{realname,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="power != null">
        #{power,jdbcType=CHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=INTEGER},
      </if>
      <if test="phonenumber != null">
        #{phonenumber,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=CHAR},
      </if>
      <if test="updatetime != null">
        #{updatetime,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.byxm.model.User">
    update user
    <set>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="realname != null">
        realname = #{realname,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="power != null">
        power = #{power,jdbcType=CHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="amount != null">
        amount = #{amount,jdbcType=INTEGER},
      </if>
      <if test="phonenumber != null">
        phonenumber = #{phonenumber,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        createtime = #{createtime,jdbcType=CHAR},
      </if>
      <if test="updatetime != null">
        updatetime = #{updatetime,jdbcType=CHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.byxm.model.User">
    update user
    set username = #{username,jdbcType=VARCHAR},
      realname = #{realname,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      power = #{power,jdbcType=CHAR},
      address = #{address,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      amount = #{amount,jdbcType=INTEGER},
      phonenumber = #{phonenumber,jdbcType=VARCHAR},
      createtime = #{createtime,jdbcType=CHAR},
      updatetime = #{updatetime,jdbcType=CHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="selectByUsername" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from user
    where username = #{username}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from user
  </select>
  <select id="selectCount" resultType="int">
    SELECT COUNT(id) FROM user
  </select>
  <select id="manageSelect" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from user
    <where>
      power != '2'
      <if test="username!=null and username!=''">
        and username like '%' #{username} '%'
      </if>
      <if test="power!=null and power!=''">
        and power = #{power}
      </if>
    </where>
  </select>
</mapper>